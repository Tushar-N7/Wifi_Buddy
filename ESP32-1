#include <WiFi.h>
#include <WebServer.h>
#include <Adafruit_SSD1306.h>
#include <DHT.h>

#define DHTPIN 5
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

#define OLED_WIDTH 128
#define OLED_HEIGHT 64
#define OLED_RESET -1
Adafruit_SSD1306 display(OLED_WIDTH, OLED_HEIGHT, &Wire, OLED_RESET);

#define TOUCH_PIN 4
#define RED_PIN 25
#define GREEN_PIN 26
#define BLUE_PIN 27

const char* ssid = "PANCHAJANYA";
const char* password = "Tushtheju25";

// Receiver ESP32 IP
const char* relayEspIP = "192.168.0.107";  // Change as needed
const int tempThreshold = 30;

unsigned long lastColorChange = 0;
int colorState = 0;

void setup() {
  Serial.begin(115200);
  pinMode(TOUCH_PIN, INPUT);
  pinMode(RED_PIN, OUTPUT);
  pinMode(GREEN_PIN, OUTPUT);
  pinMode(BLUE_PIN, OUTPUT);

  Wire.begin(21, 22);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();

  dht.begin();

  WiFi.begin(ssid, password);
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println("Connecting to WiFi...");
  display.display();

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  display.clearDisplay();
  display.setCursor(0, 0);
  display.println("WiFi Connected!");
  display.display();
  delay(1000);
  display.clearDisplay();
}

void loop() {
  cycleRGB();

  float t = dht.readTemperature();
  if (isnan(t)) return;

  if (digitalRead(TOUCH_PIN) == HIGH) {
    showWiFiAndTemp(t);
  } else {
    drawHappyFace();
  }

  if (t > tempThreshold) {
    sendRelayRequest();
  }
}

void drawHappyFace() {
  display.clearDisplay();
  display.fillCircle(64, 32, 30, SSD1306_WHITE); // face outline
  display.fillCircle(50, 25, 4, SSD1306_BLACK);  // left eye bg
  display.fillCircle(78, 25, 4, SSD1306_BLACK);  // right eye bg
  display.fillCircle(50, 25, 2, SSD1306_WHITE);  // left eye
  display.fillCircle(78, 25, 2, SSD1306_WHITE);  // right eye
  display.drawLine(50, 45, 78, 45, SSD1306_BLACK); // mouth
  display.display();
}

void showWiFiAndTemp(float temp) {
  display.clearDisplay();
  display.setCursor(0, 0);
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.println("WiFi Info:");
  display.print("IP: "); display.println(WiFi.localIP());
  display.print("RSSI: "); display.print(WiFi.RSSI()); display.println(" dBm");
  display.print("Temp: "); display.print(temp); display.println(" C");
  display.display();
}

void cycleRGB() {
  if (millis() - lastColorChange > 1000) {
    switch (colorState) {
      case 0: setColor(HIGH, LOW, LOW); break;
      case 1: setColor(LOW, HIGH, LOW); break;
      case 2: setColor(LOW, LOW, HIGH); break;
    }
    colorState = (colorState + 1) % 3;
    lastColorChange = millis();
  }
}

void setColor(bool r, bool g, bool b) {
  digitalWrite(RED_PIN, r);
  digitalWrite(GREEN_PIN, g);
  digitalWrite(BLUE_PIN, b);
}

void sendRelayRequest() {
  WiFiClient client;
  if (client.connect(relayEspIP, 80)) {
    client.print(String("GET /relay/on HTTP/1.1\r\n") +
                 "Host: " + relayEspIP + "\r\n" +
                 "Connection: close\r\n\r\n");
    delay(10);
    client.stop();
  }
}
